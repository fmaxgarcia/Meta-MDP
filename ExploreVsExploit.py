
from ExperimentsCartpole import ExperimentsCartpole as EC
from ExperimentsAnimat import ExperimentsAnimat as EA
from optparse import OptionParser
import pickle


if __name__ == '__main__':
    usage = "usage: %prog [options] arg"
    parser = OptionParser(usage)
    parser.add_option("-e", "--environment", action="store", help="environment name", type="string", default="animat")
    parser.add_option("-s", "--save", action="store", help="save directort", type="string")
    parser.add_option("-m", "--meta", action="store", help="pretrained meta policy", type="string", default=None)

    (options, args) = parser.parse_args()
    
    env = options.environment
    meta = options.meta
    save_dir = options.save

    if env.lower() == "cartpole":
    
        ##### CartPole #######################
        assert(meta is not None)
        setups = [{"force" : 12.0, "pole_length" : 0.7, "masscart" : 0.2, "masspole" : 0.4},            
                    {"force" : 5.0, "pole_length" : 0.25, "masscart" : 2.0, "masspole" : 0.2},
                    {"force" : 2.0, "pole_length" : 0.2, "masscart" : 5.0, "masspole" : 1.0},
                    ]

        EC.experiment_explore_vs_exploit(options.meta, save_dir, setups, episodes=1000, steps=1000 )
        

        #######################################
    elif env.lower() == "animat":
            
        assert(meta is not None)
        setups = ["./CustomEnvironments/maze5.txt", "./CustomEnvironments/maze6.txt", 
                  "./CustomEnvironments/maze7.txt"]
        ##### Animat #######################
        EA.experiment_meta_vs_random(options.meta, save_dir, setups, episodes=1000, steps=1000 )

        #######################################
    