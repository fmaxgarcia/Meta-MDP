import pickle
import sys 
import os 
import sys 
import matplotlib.pyplot as plt
import numpy as np
 
sys.path.append("../")
# from LinearMeta import MetaPolicy

rewards = pickle.load(open(sys.argv[1], "rb"))

num_domains = len(rewards)

explore_rewards, exploit_rewards = [], []
explore_std, exploit_std = [], []
for domain_rewards in rewards:
    explore = domain_rewards['explore']
    exploit = domain_rewards['exploit']

    explore_rewards.append( np.mean(explore) )
    exploit_rewards.append( np.mean(exploit) )
    explore_std.append( np.std(explore) )
    exploit_std.append( np.std(exploit) )





# data to plot
n_groups = len(explore_rewards)

explore_rewards.append( np.mean(explore_rewards) )
exploit_rewards.append( np.mean(exploit_rewards) )
explore_std.append( np.mean(explore_std) )
exploit_std.append( np.mean(exploit_std) )

# create plot
labels = []
fig, ax = plt.subplots()
index = np.arange(n_groups+1)
for i in range(n_groups):
    labels.append( "Task " + str(i+1) )
labels.append( "Overall" )
bar_width = 0.35
opacity = 0.8
 
rects1 = plt.bar(index, explore_rewards, bar_width,
                 alpha=opacity,
                 color='b',
                 label='Explore', yerr=explore_std)
 
rects2 = plt.bar(index + bar_width, exploit_rewards, bar_width,
                 alpha=opacity,
                 color='g',
                 label='Exploit', yerr=exploit_std)
 
plt.xlabel('Testing Tasks')
plt.ylabel('Sum of Returns')
plt.title('Exploration vs Exploitation policies')
plt.xticks(index + bar_width/2, labels)
plt.legend()
 
plt.ylim([0,50])

plt.tight_layout()
plt.show()
